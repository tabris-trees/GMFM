function [model_parameter,kernel_matrix] = Inverse(B_data,order)
%INVERSE function to compute the gauss coefficient
%   B_data: the dataset generated by function file "Read_data.m"
%   order: the Truncated degree
    length_parameter = order^2+2*order; % don't consider the hn0
    number_station = length(B_data);
    rad = pi/180;
    
    kernel_matrix = zeros(number_station*3,length_parameter);
    obs_data = zeros(number_station*3,1);
    
    for x = 1:number_station
        theta = (90-B_data(x,1))*rad;
        phi = (B_data(x,2)-180)*rad;
        obs_x = B_data(x,3);
        obs_y = B_data(x,4);
        obs_z = B_data(x,5);
    
        kernel_matrix(3*x-2:3*x,:) = KM(phi,theta,order);
        obs_data(3*x-2:3*x) = [obs_x;obs_y;obs_z];
    end
    
    model_parameter = pinv(kernel_matrix'*kernel_matrix)*kernel_matrix'*obs_data;

    writematrix(model_parameter,"Gauss_Coefficient.txt",'Delimiter','tab');
    writematrix(kernel_matrix,"Kernel_Matrix.txt",'Delimiter','tab');
end